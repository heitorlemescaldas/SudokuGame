{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nconst useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\n\n/*\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as loginService, register as registerService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await loginService(username, password);\r\n      setUser(response.data);\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await registerService(username, email, password);\r\n      setUser(response.data);\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n*/","map":{"version":3,"names":["useContext","AuthContext","useAuth","_s"],"sources":["C:/Users/lemes/Documents/PRW2 - Danilo/sudoku-main/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\nexport default useAuth;\r\n\r\n/*\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as loginService, register as registerService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await loginService(username, password);\r\n      setUser(response.data);\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await registerService(username, email, password);\r\n      setUser(response.data);\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\n*/"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,OAAOH,UAAU,CAACC,WAAW,CAAC;AAChC,CAAC;AAACE,EAAA,CAFID,OAAO;AAIb,eAAeA,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}