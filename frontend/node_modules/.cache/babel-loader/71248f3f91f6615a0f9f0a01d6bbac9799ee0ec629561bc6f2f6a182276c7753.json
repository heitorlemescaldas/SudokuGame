{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemes\\\\Documents\\\\PRW2 - Danilo\\\\sudoku-main\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sudokuModels = [\n// Modelo 1\n[[5, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9]],\n// Modelo 2\n[[0, 0, 0, 0, 6, 8, 0, 0, 4], [3, 0, 9, 0, 0, 0, 1, 5, 0], [5, 0, 8, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 7, 0, 0, 0], [7, 5, 0, 0, 0, 0, 0, 9, 2], [0, 0, 0, 4, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 7, 0, 1], [0, 7, 3, 0, 0, 0, 4, 0, 5], [6, 0, 0, 1, 9, 0, 0, 0, 0]],\n// Modelo 3\n[[1, 0, 0, 0, 0, 7, 0, 9, 0], [0, 3, 0, 0, 2, 0, 0, 0, 8], [0, 0, 9, 6, 0, 0, 5, 0, 0], [0, 0, 5, 3, 0, 0, 9, 0, 0], [0, 1, 0, 0, 8, 0, 0, 0, 2], [6, 0, 0, 0, 0, 4, 0, 0, 0], [3, 0, 0, 0, 0, 0, 0, 1, 0], [0, 4, 1, 0, 0, 0, 0, 0, 7], [0, 0, 7, 0, 0, 0, 3, 0, 0]],\n// Modelo 4\n[[0, 0, 0, 2, 6, 0, 7, 0, 1], [6, 8, 0, 0, 7, 0, 0, 9, 0], [1, 9, 0, 0, 0, 4, 5, 0, 0], [8, 2, 0, 1, 0, 0, 0, 4, 0], [0, 0, 4, 6, 0, 2, 9, 0, 0], [0, 5, 0, 0, 0, 3, 0, 2, 8], [0, 0, 9, 3, 0, 0, 0, 7, 4], [0, 4, 0, 0, 5, 0, 0, 3, 6], [7, 0, 3, 0, 1, 8, 0, 0, 0]],\n// Modelo 5\n[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 8, 5], [0, 0, 1, 0, 2, 0, 0, 0, 0], [0, 0, 0, 5, 0, 7, 0, 0, 0], [0, 0, 4, 0, 0, 0, 1, 0, 0], [0, 9, 0, 0, 0, 0, 0, 0, 0], [5, 0, 0, 0, 0, 0, 0, 7, 3], [0, 0, 2, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 0, 9]],\n// Modelo 6\n[[0, 3, 0, 0, 5, 0, 0, 4, 0], [0, 0, 8, 0, 1, 0, 0, 0, 0], [0, 0, 1, 9, 0, 0, 0, 3, 0], [0, 0, 0, 0, 0, 0, 7, 0, 0], [0, 2, 0, 0, 0, 1, 0, 6, 0], [0, 0, 0, 8, 3, 0, 0, 0, 0], [7, 0, 0, 2, 0, 0, 6, 0, 0], [0, 0, 6, 0, 0, 5, 0, 0, 9], [0, 8, 0, 0, 9, 0, 0, 1, 0]],\n// Modelo 7\n[[4, 0, 0, 8, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 6, 0, 3, 5], [0, 6, 0, 0, 7, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 6, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 0, 3, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0, 7, 0], [7, 0, 0, 0, 0, 0, 5, 2, 0], [0, 0, 3, 0, 0, 0, 0, 0, 0]],\n// Modelo 8\n[[0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 3, 9, 0, 5, 0, 0, 0, 0], [8, 0, 0, 0, 0, 7, 0, 0, 4], [0, 0, 0, 0, 0, 0, 0, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 4, 0, 0, 0, 0, 0, 0, 0], [3, 0, 0, 9, 0, 0, 0, 0, 6], [0, 0, 0, 0, 6, 0, 2, 5, 0], [0, 0, 2, 0, 0, 0, 0, 0, 0]],\n// Modelo 9\n[[0, 0, 0, 6, 0, 0, 4, 0, 0], [7, 0, 0, 0, 0, 3, 6, 0, 0], [0, 0, 0, 0, 9, 1, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 5, 0, 1, 8, 0, 0, 0, 3], [0, 0, 0, 3, 0, 6, 0, 4, 5], [0, 4, 0, 2, 0, 0, 0, 6, 0], [9, 0, 3, 0, 0, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 1, 0, 0]],\n// Modelo 10\n[[2, 0, 0, 3, 0, 4, 0, 0, 0], [0, 4, 0, 0, 0, 0, 0, 3, 0], [0, 0, 5, 0, 2, 0, 4, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 5], [0, 3, 0, 0, 5, 0, 0, 9, 0], [7, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 3, 0, 6, 0, 7, 0, 0], [0, 5, 0, 0, 0, 0, 0, 4, 0], [0, 0, 0, 2, 0, 9, 0, 0, 6]],\n// Modelo 11\n[[0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 3], [0, 6, 0, 0, 0, 3, 0, 0, 0], [0, 0, 7, 0, 1, 0, 0, 0, 0], [0, 2, 0, 0, 0, 0, 0, 0, 6], [0, 0, 0, 0, 6, 0, 0, 7, 5], [0, 0, 0, 2, 0, 0, 0, 3, 0], [1, 0, 0, 0, 0, 7, 0, 0, 0], [0, 0, 4, 0, 8, 0, 0, 0, 0]],\n// Modelo 12\n[[0, 0, 0, 0, 0, 0, 0, 6, 8], [0, 0, 3, 0, 0, 0, 4, 0, 0], [0, 4, 0, 6, 0, 0, 2, 0, 1], [0, 0, 9, 0, 0, 8, 0, 0, 0], [0, 0, 7, 0, 0, 0, 0, 0, 0], [0, 8, 0, 1, 0, 0, 5, 0, 0], [5, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 3, 6, 0, 0, 0], [7, 6, 0, 0, 0, 0, 0, 0, 0]],\n// Modelo 13\n[[0, 0, 0, 6, 0, 0, 0, 0, 0], [4, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 7, 0, 9, 0, 0, 0, 0], [0, 0, 0, 0, 6, 0, 2, 0, 8], [0, 0, 0, 0, 0, 0, 0, 3, 0], [0, 0, 0, 0, 0, 7, 0, 0, 0], [3, 0, 6, 0, 0, 0, 0, 0, 0], [0, 0, 5, 2, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 7, 0]],\n// Modelo 14\n[[0, 0, 0, 0, 0, 1, 0, 0, 0], [6, 0, 0, 0, 7, 0, 0, 0, 9], [0, 9, 0, 0, 0, 0, 0, 3, 0], [0, 0, 7, 0, 0, 0, 0, 0, 6], [0, 0, 0, 2, 0, 8, 0, 0, 0], [4, 0, 0, 0, 0, 0, 1, 0, 0], [0, 3, 0, 0, 0, 0, 0, 1, 0], [9, 0, 0, 0, 6, 0, 0, 0, 5], [0, 0, 0, 4, 0, 0, 0, 0, 0]]];\nconst solvedSudoku = [[5, 3, 4, 6, 7, 8, 9, 1, 2], [6, 7, 2, 1, 9, 5, 3, 4, 8], [1, 9, 8, 3, 4, 2, 5, 6, 7], [8, 5, 9, 7, 6, 1, 4, 2, 3], [4, 2, 6, 8, 5, 3, 7, 9, 1], [7, 1, 3, 9, 2, 4, 8, 5, 6], [9, 6, 1, 5, 3, 7, 2, 8, 4], [2, 8, 7, 4, 1, 9, 6, 3, 5], [3, 4, 5, 2, 8, 6, 1, 7, 9]];\nconst getRandomSudoku = () => {\n  const randomIndex = Math.floor(Math.random() * sudokuModels.length);\n  return sudokuModels[randomIndex];\n};\nconst Game = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [sudoku, setSudoku] = useState(getRandomSudoku);\n  const [attempts, setAttempts] = useState(3);\n  const [timer, setTimer] = useState(0);\n  const [isIncorrect, setIsIncorrect] = useState(false);\n  const navigate = useNavigate();\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleChange = (row, col, value) => {\n    if (attempts <= 0) return;\n    const newSudoku = [...sudoku];\n    newSudoku[row][col] = value;\n    setSudoku(newSudoku);\n  };\n  const handleKeyDown = (e, row, col) => {\n    if (attempts <= 0) return;\n    switch (e.key) {\n      case 'ArrowUp':\n        if (row > 0) inputRefs.current[(row - 1) * 9 + col].focus();\n        break;\n      case 'ArrowDown':\n        if (row < 8) inputRefs.current[(row + 1) * 9 + col].focus();\n        break;\n      case 'ArrowLeft':\n        if (col > 0) inputRefs.current[row * 9 + (col - 1)].focus();\n        break;\n      case 'ArrowRight':\n        if (col < 8) inputRefs.current[row * 9 + (col + 1)].focus();\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = async () => {\n    if (attempts <= 0) return;\n    if (isSudokuCorrect()) {\n      try {\n        await saveResult();\n        alert('Parabéns! Você completou o Sudoku.');\n        navigate(0); // Redirecionar para um novo jogo\n      } catch (error) {\n        console.error('Erro ao salvar o resultado:', error);\n      }\n    } else {\n      setIsIncorrect(true);\n      setTimeout(() => setIsIncorrect(false), 500);\n      setAttempts(attempts - 1);\n      if (attempts - 1 <= 0) {\n        alert('Você esgotou suas tentativas. Redirecionando para um novo jogo.');\n        navigate(0); // Redirecionar para um novo jogo\n      }\n    }\n  };\n  const saveResult = async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch('http://localhost:3000/result', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        username: user.username,\n        boardId: Date.now().toString(),\n        timeTaken: timer\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao salvar o resultado');\n    }\n  };\n  const isSudokuCorrect = () => {\n    for (let row = 0; row < 9; row++) {\n      const rowSet = new Set();\n      for (let col = 0; col < 9; col++) {\n        if (sudoku[row][col] === 0 || rowSet.has(sudoku[row][col])) {\n          return false;\n        }\n        rowSet.add(sudoku[row][col]);\n      }\n    }\n    for (let col = 0; col < 9; col++) {\n      const colSet = new Set();\n      for (let row = 0; row < 9; row++) {\n        if (sudoku[row][col] === 0 || colSet.has(sudoku[row][col])) {\n          return false;\n        }\n        colSet.add(sudoku[row][col]);\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tempo: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tentativas restantes: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isIncorrect ? 'sudoku incorrect' : 'sudoku',\n      children: sudoku.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sudoku-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"9\",\n          value: cell !== 0 ? cell : '',\n          onChange: e => handleChange(rowIndex, colIndex, Number(e.target.value)),\n          onKeyDown: e => handleKeyDown(e, rowIndex, colIndex),\n          className: \"sudoku-cell\",\n          ref: el => inputRefs.current[rowIndex * 9 + colIndex] = el\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Fazer Tentativa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"dE6oOhVRESQ2OTR8mWSVb8WT6rs=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useAuth","jsxDEV","_jsxDEV","sudokuModels","solvedSudoku","getRandomSudoku","randomIndex","Math","floor","random","length","Game","_s","user","sudoku","setSudoku","attempts","setAttempts","timer","setTimer","isIncorrect","setIsIncorrect","navigate","inputRefs","interval","setInterval","clearInterval","handleChange","row","col","value","newSudoku","handleKeyDown","e","key","current","focus","handleSubmit","isSudokuCorrect","saveResult","alert","error","console","setTimeout","token","localStorage","getItem","response","fetch","method","headers","Authorization","body","JSON","stringify","username","boardId","Date","now","toString","timeTaken","ok","Error","rowSet","Set","has","add","colSet","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","rowIndex","cell","colIndex","type","min","max","onChange","Number","target","onKeyDown","ref","el","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lemes/Documents/PRW2 - Danilo/sudoku-main/frontend/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst sudokuModels = [\r\n  // Modelo 1\r\n  [\r\n    [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n    [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n    [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n    [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n    [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n    [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n    [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n    [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n    [0, 0, 0, 0, 8, 0, 0, 7, 9]\r\n  ],\r\n  // Modelo 2\r\n  [\r\n    [0, 0, 0, 0, 6, 8, 0, 0, 4],\r\n    [3, 0, 9, 0, 0, 0, 1, 5, 0],\r\n    [5, 0, 8, 0, 0, 0, 0, 2, 0],\r\n    [0, 0, 0, 0, 0, 7, 0, 0, 0],\r\n    [7, 5, 0, 0, 0, 0, 0, 9, 2],\r\n    [0, 0, 0, 4, 0, 0, 0, 0, 0],\r\n    [0, 2, 0, 0, 0, 0, 7, 0, 1],\r\n    [0, 7, 3, 0, 0, 0, 4, 0, 5],\r\n    [6, 0, 0, 1, 9, 0, 0, 0, 0]\r\n  ],\r\n  // Modelo 3\r\n  [\r\n    [1, 0, 0, 0, 0, 7, 0, 9, 0],\r\n    [0, 3, 0, 0, 2, 0, 0, 0, 8],\r\n    [0, 0, 9, 6, 0, 0, 5, 0, 0],\r\n    [0, 0, 5, 3, 0, 0, 9, 0, 0],\r\n    [0, 1, 0, 0, 8, 0, 0, 0, 2],\r\n    [6, 0, 0, 0, 0, 4, 0, 0, 0],\r\n    [3, 0, 0, 0, 0, 0, 0, 1, 0],\r\n    [0, 4, 1, 0, 0, 0, 0, 0, 7],\r\n    [0, 0, 7, 0, 0, 0, 3, 0, 0]\r\n  ],\r\n  // Modelo 4\r\n  [\r\n    [0, 0, 0, 2, 6, 0, 7, 0, 1],\r\n    [6, 8, 0, 0, 7, 0, 0, 9, 0],\r\n    [1, 9, 0, 0, 0, 4, 5, 0, 0],\r\n    [8, 2, 0, 1, 0, 0, 0, 4, 0],\r\n    [0, 0, 4, 6, 0, 2, 9, 0, 0],\r\n    [0, 5, 0, 0, 0, 3, 0, 2, 8],\r\n    [0, 0, 9, 3, 0, 0, 0, 7, 4],\r\n    [0, 4, 0, 0, 5, 0, 0, 3, 6],\r\n    [7, 0, 3, 0, 1, 8, 0, 0, 0]\r\n  ],\r\n  // Modelo 5\r\n  [\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 3, 0, 8, 5],\r\n    [0, 0, 1, 0, 2, 0, 0, 0, 0],\r\n    [0, 0, 0, 5, 0, 7, 0, 0, 0],\r\n    [0, 0, 4, 0, 0, 0, 1, 0, 0],\r\n    [0, 9, 0, 0, 0, 0, 0, 0, 0],\r\n    [5, 0, 0, 0, 0, 0, 0, 7, 3],\r\n    [0, 0, 2, 0, 1, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 4, 0, 0, 0, 9]\r\n  ],\r\n  // Modelo 6\r\n  [\r\n    [0, 3, 0, 0, 5, 0, 0, 4, 0],\r\n    [0, 0, 8, 0, 1, 0, 0, 0, 0],\r\n    [0, 0, 1, 9, 0, 0, 0, 3, 0],\r\n    [0, 0, 0, 0, 0, 0, 7, 0, 0],\r\n    [0, 2, 0, 0, 0, 1, 0, 6, 0],\r\n    [0, 0, 0, 8, 3, 0, 0, 0, 0],\r\n    [7, 0, 0, 2, 0, 0, 6, 0, 0],\r\n    [0, 0, 6, 0, 0, 5, 0, 0, 9],\r\n    [0, 8, 0, 0, 9, 0, 0, 1, 0]\r\n  ],\r\n  // Modelo 7\r\n  [\r\n    [4, 0, 0, 8, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 6, 0, 3, 5],\r\n    [0, 6, 0, 0, 7, 0, 0, 0, 2],\r\n    [0, 0, 0, 0, 0, 0, 0, 6, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 5, 0, 0, 3, 0, 0, 0],\r\n    [0, 0, 0, 0, 4, 0, 0, 7, 0],\r\n    [7, 0, 0, 0, 0, 0, 5, 2, 0],\r\n    [0, 0, 3, 0, 0, 0, 0, 0, 0]\r\n  ],\r\n  // Modelo 8\r\n  [\r\n    [0, 0, 0, 0, 0, 0, 1, 0, 0],\r\n    [0, 3, 9, 0, 5, 0, 0, 0, 0],\r\n    [8, 0, 0, 0, 0, 7, 0, 0, 4],\r\n    [0, 0, 0, 0, 0, 0, 0, 2, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 4, 0, 0, 0, 0, 0, 0, 0],\r\n    [3, 0, 0, 9, 0, 0, 0, 0, 6],\r\n    [0, 0, 0, 0, 6, 0, 2, 5, 0],\r\n    [0, 0, 2, 0, 0, 0, 0, 0, 0]\r\n  ],\r\n  // Modelo 9\r\n  [\r\n    [0, 0, 0, 6, 0, 0, 4, 0, 0],\r\n    [7, 0, 0, 0, 0, 3, 6, 0, 0],\r\n    [0, 0, 0, 0, 9, 1, 0, 8, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 5, 0, 1, 8, 0, 0, 0, 3],\r\n    [0, 0, 0, 3, 0, 6, 0, 4, 5],\r\n    [0, 4, 0, 2, 0, 0, 0, 6, 0],\r\n    [9, 0, 3, 0, 0, 0, 0, 0, 0],\r\n    [0, 2, 0, 0, 0, 0, 1, 0, 0]\r\n  ],\r\n  // Modelo 10\r\n  [\r\n    [2, 0, 0, 3, 0, 4, 0, 0, 0],\r\n    [0, 4, 0, 0, 0, 0, 0, 3, 0],\r\n    [0, 0, 5, 0, 2, 0, 4, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 1, 0, 5],\r\n    [0, 3, 0, 0, 5, 0, 0, 9, 0],\r\n    [7, 0, 1, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 3, 0, 6, 0, 7, 0, 0],\r\n    [0, 5, 0, 0, 0, 0, 0, 4, 0],\r\n    [0, 0, 0, 2, 0, 9, 0, 0, 6]\r\n  ],\r\n  // Modelo 11\r\n  [\r\n    [0, 0, 0, 0, 2, 0, 0, 0, 0],\r\n    [0, 0, 0, 6, 0, 0, 0, 0, 3],\r\n    [0, 6, 0, 0, 0, 3, 0, 0, 0],\r\n    [0, 0, 7, 0, 1, 0, 0, 0, 0],\r\n    [0, 2, 0, 0, 0, 0, 0, 0, 6],\r\n    [0, 0, 0, 0, 6, 0, 0, 7, 5],\r\n    [0, 0, 0, 2, 0, 0, 0, 3, 0],\r\n    [1, 0, 0, 0, 0, 7, 0, 0, 0],\r\n    [0, 0, 4, 0, 8, 0, 0, 0, 0]\r\n  ],\r\n  // Modelo 12\r\n  [\r\n    [0, 0, 0, 0, 0, 0, 0, 6, 8],\r\n    [0, 0, 3, 0, 0, 0, 4, 0, 0],\r\n    [0, 4, 0, 6, 0, 0, 2, 0, 1],\r\n    [0, 0, 9, 0, 0, 8, 0, 0, 0],\r\n    [0, 0, 7, 0, 0, 0, 0, 0, 0],\r\n    [0, 8, 0, 1, 0, 0, 5, 0, 0],\r\n    [5, 0, 0, 0, 0, 0, 1, 0, 0],\r\n    [0, 0, 0, 0, 3, 6, 0, 0, 0],\r\n    [7, 6, 0, 0, 0, 0, 0, 0, 0]\r\n  ],\r\n  // Modelo 13\r\n  [\r\n    [0, 0, 0, 6, 0, 0, 0, 0, 0],\r\n    [4, 0, 1, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 7, 0, 9, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 6, 0, 2, 0, 8],\r\n    [0, 0, 0, 0, 0, 0, 0, 3, 0],\r\n    [0, 0, 0, 0, 0, 7, 0, 0, 0],\r\n    [3, 0, 6, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 5, 2, 0, 0, 0, 0, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 7, 0]\r\n  ],\r\n  // Modelo 14\r\n  [\r\n    [0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n    [6, 0, 0, 0, 7, 0, 0, 0, 9],\r\n    [0, 9, 0, 0, 0, 0, 0, 3, 0],\r\n    [0, 0, 7, 0, 0, 0, 0, 0, 6],\r\n    [0, 0, 0, 2, 0, 8, 0, 0, 0],\r\n    [4, 0, 0, 0, 0, 0, 1, 0, 0],\r\n    [0, 3, 0, 0, 0, 0, 0, 1, 0],\r\n    [9, 0, 0, 0, 6, 0, 0, 0, 5],\r\n    [0, 0, 0, 4, 0, 0, 0, 0, 0]\r\n  ],\r\n];\r\n\r\nconst solvedSudoku = [\r\n  [5, 3, 4, 6, 7, 8, 9, 1, 2],\r\n  [6, 7, 2, 1, 9, 5, 3, 4, 8],\r\n  [1, 9, 8, 3, 4, 2, 5, 6, 7],\r\n  [8, 5, 9, 7, 6, 1, 4, 2, 3],\r\n  [4, 2, 6, 8, 5, 3, 7, 9, 1],\r\n  [7, 1, 3, 9, 2, 4, 8, 5, 6],\r\n  [9, 6, 1, 5, 3, 7, 2, 8, 4],\r\n  [2, 8, 7, 4, 1, 9, 6, 3, 5],\r\n  [3, 4, 5, 2, 8, 6, 1, 7, 9]\r\n];\r\n\r\nconst getRandomSudoku = () => {\r\n  const randomIndex = Math.floor(Math.random() * sudokuModels.length);\r\n  return sudokuModels[randomIndex];\r\n};\r\n\r\nconst Game = () => {\r\n  const { user } = useAuth();\r\n  const [sudoku, setSudoku] = useState(getRandomSudoku);\r\n  const [attempts, setAttempts] = useState(3);\r\n  const [timer, setTimer] = useState(0);\r\n  const [isIncorrect, setIsIncorrect] = useState(false);\r\n  const navigate = useNavigate();\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer(timer => timer + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleChange = (row, col, value) => {\r\n    if (attempts <= 0) return;\r\n    const newSudoku = [...sudoku];\r\n    newSudoku[row][col] = value;\r\n    setSudoku(newSudoku);\r\n  };\r\n\r\n  const handleKeyDown = (e, row, col) => {\r\n    if (attempts <= 0) return;\r\n\r\n    switch (e.key) {\r\n      case 'ArrowUp':\r\n        if (row > 0) inputRefs.current[(row - 1) * 9 + col].focus();\r\n        break;\r\n      case 'ArrowDown':\r\n        if (row < 8) inputRefs.current[(row + 1) * 9 + col].focus();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (col > 0) inputRefs.current[row * 9 + (col - 1)].focus();\r\n        break;\r\n      case 'ArrowRight':\r\n        if (col < 8) inputRefs.current[row * 9 + (col + 1)].focus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (attempts <= 0) return;\r\n\r\n    if (isSudokuCorrect()) {\r\n      try {\r\n        await saveResult();\r\n        alert('Parabéns! Você completou o Sudoku.');\r\n        navigate(0); // Redirecionar para um novo jogo\r\n      } catch (error) {\r\n        console.error('Erro ao salvar o resultado:', error);\r\n      }\r\n    } else {\r\n      setIsIncorrect(true);\r\n      setTimeout(() => setIsIncorrect(false), 500);\r\n      setAttempts(attempts - 1);\r\n\r\n      if (attempts - 1 <= 0) {\r\n        alert('Você esgotou suas tentativas. Redirecionando para um novo jogo.');\r\n        navigate(0); // Redirecionar para um novo jogo\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveResult = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const response = await fetch('http://localhost:3000/result', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        username: user.username,\r\n        boardId: Date.now().toString(),\r\n        timeTaken: timer,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Erro ao salvar o resultado');\r\n    }\r\n  };\r\n\r\n  const isSudokuCorrect = () => {\r\n    for (let row = 0; row < 9; row++) {\r\n      const rowSet = new Set();\r\n      for (let col = 0; col < 9; col++) {\r\n        if (sudoku[row][col] === 0 || rowSet.has(sudoku[row][col])) {\r\n          return false;\r\n        }\r\n        rowSet.add(sudoku[row][col]);\r\n      }\r\n    }\r\n\r\n    for (let col = 0; col < 9; col++) {\r\n      const colSet = new Set();\r\n      for (let row = 0; row < 9; row++) {\r\n        if (sudoku[row][col] === 0 || colSet.has(sudoku[row][col])) {\r\n          return false;\r\n        }\r\n        colSet.add(sudoku[row][col]);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sudoku</h2>\r\n      <div>Tempo: {timer}s</div>\r\n      <div>Tentativas restantes: {attempts}</div>\r\n      <div className={isIncorrect ? 'sudoku incorrect' : 'sudoku'}>\r\n        {sudoku.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"sudoku-row\">\r\n            {row.map((cell, colIndex) => (\r\n              <input\r\n                key={colIndex}\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"9\"\r\n                value={cell !== 0 ? cell : ''}\r\n                onChange={(e) => handleChange(rowIndex, colIndex, Number(e.target.value))}\r\n                onKeyDown={(e) => handleKeyDown(e, rowIndex, colIndex)}\r\n                className=\"sudoku-cell\"\r\n                ref={el => inputRefs.current[rowIndex * 9 + colIndex] = el}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSubmit}>Fazer Tentativa</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAG;AACnB;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC5B;AACD;AACA,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAC3B,CAAC,CAAC,EAAE,CAAC,E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}