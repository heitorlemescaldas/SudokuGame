{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemes\\\\Documents\\\\PRW2 - Danilo\\\\sudoku-main\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login as loginService, register as registerService } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const login = async (username, password) => {\n    try {\n      const response = await loginService(username, password);\n      const token = response.token;\n      localStorage.setItem('token', token); // Salvar o token no localStorage\n      setUser({\n        username\n      });\n      navigate('/game');\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await registerService(username, email, password);\n      const token = response.token;\n      localStorage.setItem('token', token); // Salvar o token no localStorage\n      setUser({\n        username\n      });\n      navigate('/game');\n    } catch (error) {\n      console.error('Error during registration:', error);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token'); // Remover o token do localStorage\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6IF8oi2v+FFFMVJXFQinFj68c40=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useNavigate","login","loginService","register","registerService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","navigate","username","password","response","token","localStorage","setItem","error","console","email","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/lemes/Documents/PRW2 - Danilo/sudoku-main/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login as loginService, register as registerService } from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await loginService(username, password);\r\n      const token = response.token;\r\n      localStorage.setItem('token', token); // Salvar o token no localStorage\r\n      setUser({ username });\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await registerService(username, email, password);\r\n      const token = response.token;\r\n      localStorage.setItem('token', token); // Salvar o token no localStorage\r\n      setUser({ username });\r\n      navigate('/game');\r\n    } catch (error) {\r\n      console.error('Error during registration:', error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token'); // Remover o token do localStorage\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,IAAIC,YAAY,EAAEC,QAAQ,IAAIC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMW,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMC,KAAK,GAAG,MAAAA,CAAOa,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,YAAY,CAACY,QAAQ,EAAEC,QAAQ,CAAC;MACvD,MAAME,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;MACtCL,OAAO,CAAC;QAAEE;MAAS,CAAC,CAAC;MACrBD,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMjB,QAAQ,GAAG,MAAAA,CAAOW,QAAQ,EAAEQ,KAAK,EAAEP,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,eAAe,CAACU,QAAQ,EAAEQ,KAAK,EAAEP,QAAQ,CAAC;MACjE,MAAME,KAAK,GAAGD,QAAQ,CAACC,KAAK;MAC5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC,CAAC;MACtCL,OAAO,CAAC;QAAEE;MAAS,CAAC,CAAC;MACrBD,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCZ,OAAO,CAAC,IAAI,CAAC;IACbC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEV,KAAK;MAAEE,QAAQ;MAAEoB;IAAO,CAAE;IAAAd,QAAA,EAC5DA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAvCWF,YAAY;EAAA,QAENR,WAAW;AAAA;AAAA+B,EAAA,GAFjBvB,YAAY;AAyCzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnC,UAAU,CAACS,WAAW,CAAC;AAAA;AAAC0B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}