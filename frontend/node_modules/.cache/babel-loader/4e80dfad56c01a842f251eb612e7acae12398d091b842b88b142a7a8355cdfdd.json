{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemes\\\\Documents\\\\PRW2 - Danilo\\\\sudoku-main\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSudoku = [[5, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9]];\nconst Game = () => {\n  _s();\n  const [sudoku, setSudoku] = useState(initialSudoku);\n  const [attempts, setAttempts] = useState(3);\n  const [timer, setTimer] = useState(0);\n  const [isIncorrect, setIsIncorrect] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleChange = (row, col, value) => {\n    if (attempts <= 0) return;\n    const newSudoku = [...sudoku];\n    newSudoku[row][col] = value;\n    setSudoku(newSudoku);\n  };\n  const handleSubmit = () => {\n    if (attempts > 0) {\n      const isCorrect = checkSudoku(sudoku);\n      if (isCorrect) {\n        alert('Parabéns, você completou o Sudoku!');\n        // Lógica para salvar o resultado pode ser adicionada aqui\n      } else {\n        setIsIncorrect(true);\n        setTimeout(() => setIsIncorrect(false), 500);\n        setAttempts(attempts - 1);\n        if (attempts === 1) {\n          alert('Acabaram as tentativas.');\n          navigate('/');\n        }\n      }\n    }\n  };\n  const checkSudoku = sudoku => {\n    // Lógica para verificar se o Sudoku está correto\n    // Por simplicidade, vamos assumir que sempre está incorreto para o exemplo\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tempo: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tentativas restantes: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isIncorrect ? 'sudoku incorrect' : 'sudoku',\n      children: sudoku.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0\",\n          max: \"9\",\n          value: cell !== 0 ? cell : '',\n          onChange: e => handleChange(rowIndex, colIndex, Number(e.target.value)),\n          disabled: cell !== 0,\n          style: {\n            width: '40px',\n            height: '40px',\n            textAlign: 'center'\n          }\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Fazer Tentativa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"iGrp411QfyHRONH+SVuwS4OTb9w=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","initialSudoku","Game","_s","sudoku","setSudoku","attempts","setAttempts","timer","setTimer","isIncorrect","setIsIncorrect","navigate","interval","setInterval","clearInterval","handleChange","row","col","value","newSudoku","handleSubmit","isCorrect","checkSudoku","alert","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","rowIndex","cell","colIndex","type","min","max","onChange","e","Number","target","disabled","style","width","height","textAlign","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lemes/Documents/PRW2 - Danilo/sudoku-main/frontend/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst initialSudoku = [\r\n  [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n  [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n  [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n  [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n  [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n  [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n  [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n  [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n  [0, 0, 0, 0, 8, 0, 0, 7, 9]\r\n];\r\n\r\nconst Game = () => {\r\n  const [sudoku, setSudoku] = useState(initialSudoku);\r\n  const [attempts, setAttempts] = useState(3);\r\n  const [timer, setTimer] = useState(0);\r\n  const [isIncorrect, setIsIncorrect] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer(timer => timer + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleChange = (row, col, value) => {\r\n    if (attempts <= 0) return;\r\n    const newSudoku = [...sudoku];\r\n    newSudoku[row][col] = value;\r\n    setSudoku(newSudoku);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (attempts > 0) {\r\n      const isCorrect = checkSudoku(sudoku);\r\n      if (isCorrect) {\r\n        alert('Parabéns, você completou o Sudoku!');\r\n        // Lógica para salvar o resultado pode ser adicionada aqui\r\n      } else {\r\n        setIsIncorrect(true);\r\n        setTimeout(() => setIsIncorrect(false), 500);\r\n        setAttempts(attempts - 1);\r\n        if (attempts === 1) {\r\n          alert('Acabaram as tentativas.');\r\n          navigate('/');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkSudoku = (sudoku) => {\r\n    // Lógica para verificar se o Sudoku está correto\r\n    // Por simplicidade, vamos assumir que sempre está incorreto para o exemplo\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sudoku</h2>\r\n      <div>Tempo: {timer}s</div>\r\n      <div>Tentativas restantes: {attempts}</div>\r\n      <div className={isIncorrect ? 'sudoku incorrect' : 'sudoku'}>\r\n        {sudoku.map((row, rowIndex) => (\r\n          <div key={rowIndex}>\r\n            {row.map((cell, colIndex) => (\r\n              <input\r\n                key={colIndex}\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"9\"\r\n                value={cell !== 0 ? cell : ''}\r\n                onChange={(e) => handleChange(rowIndex, colIndex, Number(e.target.value))}\r\n                disabled={cell !== 0}\r\n                style={{ width: '40px', height: '40px', textAlign: 'center' }}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSubmit}>Fazer Tentativa</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}