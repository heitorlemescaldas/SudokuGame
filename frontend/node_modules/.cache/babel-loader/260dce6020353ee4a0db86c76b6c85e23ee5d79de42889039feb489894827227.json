{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lemes\\\\Documents\\\\PRW2 - Danilo\\\\sudoku-main\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { saveResult } from '../services/game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSudoku = [[5, 3, 0, 0, 7, 0, 0, 0, 0], [6, 0, 0, 1, 9, 5, 0, 0, 0], [0, 9, 8, 0, 0, 0, 0, 6, 0], [8, 0, 0, 0, 6, 0, 0, 0, 3], [4, 0, 0, 8, 0, 3, 0, 0, 1], [7, 0, 0, 0, 2, 0, 0, 0, 6], [0, 6, 0, 0, 0, 0, 2, 8, 0], [0, 0, 0, 4, 1, 9, 0, 0, 5], [0, 0, 0, 0, 8, 0, 0, 7, 9]];\nconst Game = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [sudoku, setSudoku] = useState(initialSudoku);\n  const [attempts, setAttempts] = useState(3);\n  const [timer, setTimer] = useState(0);\n  const [isIncorrect, setIsIncorrect] = useState(false);\n  const navigate = useNavigate();\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleChange = (row, col, value) => {\n    if (attempts <= 0) return;\n    const newSudoku = [...sudoku];\n    newSudoku[row][col] = value;\n    setSudoku(newSudoku);\n  };\n  const handleKeyDown = (e, row, col) => {\n    if (attempts <= 0) return;\n    switch (e.key) {\n      case 'ArrowUp':\n        if (row > 0) inputRefs.current[(row - 1) * 9 + col].focus();\n        break;\n      case 'ArrowDown':\n        if (row < 8) inputRefs.current[(row + 1) * 9 + col].focus();\n        break;\n      case 'ArrowLeft':\n        if (col > 0) inputRefs.current[row * 9 + (col - 1)].focus();\n        break;\n      case 'ArrowRight':\n        if (col < 8) inputRefs.current[row * 9 + (col + 1)].focus();\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = async () => {\n    if (attempts > 0) {\n      const isCorrect = checkSudoku(sudoku);\n      if (isCorrect) {\n        alert('Parabéns, você completou o Sudoku!');\n        await saveResult({\n          username: user.username,\n          timeTaken: timer\n        });\n        navigate('/ranking');\n      } else {\n        setIsIncorrect(true);\n        setTimeout(() => setIsIncorrect(false), 500);\n        setAttempts(attempts - 1);\n        if (attempts === 1) {\n          alert('Acabaram as tentativas.');\n          navigate('/');\n        }\n      }\n    }\n  };\n  const checkSudoku = sudoku => {\n    // Verificar linhas\n    for (let row = 0; row < 9; row++) {\n      const rowSet = new Set();\n      for (let col = 0; col < 9; col++) {\n        if (sudoku[row][col] === 0 || rowSet.has(sudoku[row][col])) {\n          return false;\n        }\n        rowSet.add(sudoku[row][col]);\n      }\n    }\n\n    // Verificar colunas\n    for (let col = 0; col < 9; col++) {\n      const colSet = new Set();\n      for (let row = 0; row < 9; row++) {\n        if (sudoku[row][col] === 0 || colSet.has(sudoku[row][col])) {\n          return false;\n        }\n        colSet.add(sudoku[row][col]);\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sudoku\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tempo: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Tentativas restantes: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isIncorrect ? 'sudoku incorrect' : 'sudoku',\n      children: sudoku.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sudoku-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"9\",\n          value: cell !== 0 ? cell : '',\n          onChange: e => handleChange(rowIndex, colIndex, Number(e.target.value)),\n          onKeyDown: e => handleKeyDown(e, rowIndex, colIndex),\n          className: \"sudoku-cell\",\n          ref: el => inputRefs.current[rowIndex * 9 + colIndex] = el\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Fazer Tentativa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"94KNy1Y1ehyK1HV3d63WXtza9Rw=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useAuth","saveResult","jsxDEV","_jsxDEV","initialSudoku","Game","_s","user","sudoku","setSudoku","attempts","setAttempts","timer","setTimer","isIncorrect","setIsIncorrect","navigate","inputRefs","interval","setInterval","clearInterval","handleChange","row","col","value","newSudoku","handleKeyDown","e","key","current","focus","handleSubmit","isCorrect","checkSudoku","alert","username","timeTaken","setTimeout","rowSet","Set","has","add","colSet","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","rowIndex","cell","colIndex","type","min","max","onChange","Number","target","onKeyDown","ref","el","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lemes/Documents/PRW2 - Danilo/sudoku-main/frontend/src/pages/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { saveResult } from '../services/game';\r\n\r\nconst initialSudoku = [\r\n  [5, 3, 0, 0, 7, 0, 0, 0, 0],\r\n  [6, 0, 0, 1, 9, 5, 0, 0, 0],\r\n  [0, 9, 8, 0, 0, 0, 0, 6, 0],\r\n  [8, 0, 0, 0, 6, 0, 0, 0, 3],\r\n  [4, 0, 0, 8, 0, 3, 0, 0, 1],\r\n  [7, 0, 0, 0, 2, 0, 0, 0, 6],\r\n  [0, 6, 0, 0, 0, 0, 2, 8, 0],\r\n  [0, 0, 0, 4, 1, 9, 0, 0, 5],\r\n  [0, 0, 0, 0, 8, 0, 0, 7, 9]\r\n];\r\n\r\n\r\n\r\nconst Game = () => {\r\n  const { user } = useAuth();\r\n  const [sudoku, setSudoku] = useState(initialSudoku);\r\n  const [attempts, setAttempts] = useState(3);\r\n  const [timer, setTimer] = useState(0);\r\n  const [isIncorrect, setIsIncorrect] = useState(false);\r\n  const navigate = useNavigate();\r\n  const inputRefs = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer(timer => timer + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleChange = (row, col, value) => {\r\n    if (attempts <= 0) return;\r\n    const newSudoku = [...sudoku];\r\n    newSudoku[row][col] = value;\r\n    setSudoku(newSudoku);\r\n  };\r\n\r\n  const handleKeyDown = (e, row, col) => {\r\n    if (attempts <= 0) return;\r\n\r\n    switch (e.key) {\r\n      case 'ArrowUp':\r\n        if (row > 0) inputRefs.current[(row - 1) * 9 + col].focus();\r\n        break;\r\n      case 'ArrowDown':\r\n        if (row < 8) inputRefs.current[(row + 1) * 9 + col].focus();\r\n        break;\r\n      case 'ArrowLeft':\r\n        if (col > 0) inputRefs.current[row * 9 + (col - 1)].focus();\r\n        break;\r\n      case 'ArrowRight':\r\n        if (col < 8) inputRefs.current[row * 9 + (col + 1)].focus();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (attempts > 0) {\r\n      const isCorrect = checkSudoku(sudoku);\r\n      if (isCorrect) {\r\n        alert('Parabéns, você completou o Sudoku!');\r\n        await saveResult({ username: user.username, timeTaken: timer });\r\n        navigate('/ranking');\r\n      } else {\r\n        setIsIncorrect(true);\r\n        setTimeout(() => setIsIncorrect(false), 500);\r\n        setAttempts(attempts - 1);\r\n        if (attempts === 1) {\r\n          alert('Acabaram as tentativas.');\r\n          navigate('/');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkSudoku = (sudoku) => {\r\n    // Verificar linhas\r\n    for (let row = 0; row < 9; row++) {\r\n      const rowSet = new Set();\r\n      for (let col = 0; col < 9; col++) {\r\n        if (sudoku[row][col] === 0 || rowSet.has(sudoku[row][col])) {\r\n          return false;\r\n        }\r\n        rowSet.add(sudoku[row][col]);\r\n      }\r\n    }\r\n\r\n    // Verificar colunas\r\n    for (let col = 0; col < 9; col++) {\r\n      const colSet = new Set();\r\n      for (let row = 0; row < 9; row++) {\r\n        if (sudoku[row][col] === 0 || colSet.has(sudoku[row][col])) {\r\n          return false;\r\n        }\r\n        colSet.add(sudoku[row][col]);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sudoku</h2>\r\n      <div>Tempo: {timer}s</div>\r\n      <div>Tentativas restantes: {attempts}</div>\r\n      <div className={isIncorrect ? 'sudoku incorrect' : 'sudoku'}>\r\n        {sudoku.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"sudoku-row\">\r\n            {row.map((cell, colIndex) => (\r\n              <input\r\n                key={colIndex}\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"9\"\r\n                value={cell !== 0 ? cell : ''}\r\n                onChange={(e) => handleChange(rowIndex, colIndex, Number(e.target.value))}\r\n                onKeyDown={(e) => handleKeyDown(e, rowIndex, colIndex)}\r\n                className=\"sudoku-cell\"\r\n                ref={el => inputRefs.current[rowIndex * 9 + colIndex] = el}\r\n              />\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button onClick={handleSubmit}>Fazer Tentativa</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}